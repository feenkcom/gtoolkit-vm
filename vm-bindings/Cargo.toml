[package]
name = "vm-bindings"
version = "0.2.0"
authors = ["feenk gmbh. <contact@feenk.com>"]
edition = "2021"

[dependencies]
anyhow = "1.0"
log = "0.4"
libffi = { version = "3.1", optional = true }
libffi-sys = { version = "2.1", optional = true }
num = "0.4"
num-derive = "0.3"
num-traits = "0.2"

[features]
default = [ "full" ]
# Production ready VM with jit. Ideal for desktop on all platforms.
full = [ "jit", "full_without_jit" ]
# Production ready VM without jit support. Will be slow.
full_without_jit = [ "ffi", "threaded_ffi", "all_plugins", "immutability", "inline_memory_accessors" ]
# Compile Just-In-Time enabled virtual machine. JIT is not available on iOS devices.
jit = []
# The minimally working non-jit VM without ffi and most plugins
# minimal VM is capable of booting a minimal pharo image and evaluate smalltalk
minimal = [ "file_plugin", "file_attributes_plugin", "misc_primitive_plugin" ]
# Enables all plugins
all_plugins = [
    "b2d_plugin",
    "bit_blt_plugin",
    "dsa_primitives_plugin",
    "file_plugin",
    "file_attributes_plugin",
    "float_array_plugin",
    "jpeg_read_writer2_plugin",
    "jpeg_reader_plugin",
    "large_integers_plugin",
    "locale_plugin",
    "misc_primitive_plugin",
    "socket_plugin",
    "squeak_ssl_plugin",
    "surface_plugin",
    "unix_os_process_plugin",
    "uuid_plugin" ]
# Include primitives to make objects readonly
immutability = []
# Use static inline functions when the compiler produces efficient code for small accessors.
inline_memory_accessors = []
ffi = [ "libffi", "libffi-sys" ]
threaded_ffi = ["ffi"]
# VM Plugins
b2d_plugin = []
bit_blt_plugin = []
dsa_primitives_plugin = []
file_plugin = []
file_attributes_plugin = ["file_plugin"]
float_array_plugin = []
jpeg_read_writer2_plugin = []
jpeg_reader_plugin = []
large_integers_plugin = []
locale_plugin = []
misc_primitive_plugin = []
socket_plugin = []
squeak_ssl_plugin = []
surface_plugin = []
unix_os_process_plugin = ["file_plugin", "socket_plugin"]
uuid_plugin = []
# Compile GNU processed interpreter sources.
# Clang does not require gnuisation
gnuisation = []

[build-dependencies]
platforms = "3.0"
bindgen = "0.64"
fs_extra = "1.1"
to_absolute = "0.1"
which = "4.1"
titlecase = "2.1"
file-matcher = "0.7"
cc = { git = "https://github.com/syrel/cc-rs", rev = "2794bd456cd7ecf75e5bc79c2499a8eb9920f0a2" }
new_string_template = "1.0"
regex = "1.5"
pkg-config = "0.3"
strum = { version = "0.24", features = ["derive"] }
git2 = "0.16"
anyhow = "1.0"
chrono = "0.4"
semver = { version = "1", features = [ "serde" ] }
user-error = "1.2"
clang-sys = "1.3"
console = { version = ">=0.9.1, <1.0.0", default-features = false }
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = [ "derive" ]}
serde_json = "1.0"
downloader = { git = "https://github.com/feenkcom/build-helpers-rs" }
unzipper = { git = "https://github.com/feenkcom/build-helpers-rs" }
commander = { git = "https://github.com/feenkcom/build-helpers-rs" }
#downloader = { path = "../../build-helpers-rs/downloader" }
#unzipper = { path = "../../build-helpers-rs/unzipper" }
#commander = { path = "../../build-helpers-rs/commander" }
libopenssl-library = { git = "https://github.com/feenkcom/libopenssl.git" }
shared-library-builder = { git = "https://github.com/feenkcom/shared-library-builder-rs" }
ndk-build = "0.9"